{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Pwt exposing (SignedToken, Token, decodeSignedToken, decodeToken, defaultSignedToken, defaultToken, encodeSignedToken, encodeToken, fieldNumbersSignedToken, fieldNumbersToken)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.4
- `protoc` 4.25.3
- the following specification files: `pwt.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs SignedToken, Token, decodeSignedToken, decodeToken, defaultSignedToken, defaultToken, encodeSignedToken, encodeToken

@docs fieldNumbersSignedToken, fieldNumbersToken

-}

import Proto.Pwt.Internals_
import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `SignedToken`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersSignedToken : { data : Int, signature : Int }
fieldNumbersSignedToken =
    Proto.Pwt.Internals_.fieldNumbersProto__Pwt__SignedToken


{-| Default for SignedToken. Should only be used for 'required' decoders as an initial value.

-}
defaultSignedToken : SignedToken
defaultSignedToken =
    Proto.Pwt.Internals_.defaultProto__Pwt__SignedToken


{-| Declares how to decode a `SignedToken` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeSignedToken : Protobuf.Decode.Decoder SignedToken
decodeSignedToken =
    Proto.Pwt.Internals_.decodeProto__Pwt__SignedToken


{-| Declares how to encode a `SignedToken` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeSignedToken : SignedToken -> Protobuf.Encode.Encoder
encodeSignedToken =
    Proto.Pwt.Internals_.encodeProto__Pwt__SignedToken


{-| `SignedToken` message

-}
type alias SignedToken =
    Proto.Pwt.Internals_.Proto__Pwt__SignedToken


{-| The field numbers for the fields of `Token`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersToken : { validUntil : Int, claims : Int }
fieldNumbersToken =
    Proto.Pwt.Internals_.fieldNumbersProto__Pwt__Token


{-| Default for Token. Should only be used for 'required' decoders as an initial value.

-}
defaultToken : Token
defaultToken =
    Proto.Pwt.Internals_.defaultProto__Pwt__Token


{-| Declares how to decode a `Token` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeToken : Protobuf.Decode.Decoder Token
decodeToken =
    Proto.Pwt.Internals_.decodeProto__Pwt__Token


{-| Declares how to encode a `Token` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeToken : Token -> Protobuf.Encode.Encoder
encodeToken =
    Proto.Pwt.Internals_.encodeProto__Pwt__Token


{-| `Token` message

-}
type alias Token =
    Proto.Pwt.Internals_.Proto__Pwt__Token
